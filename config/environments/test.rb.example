CfiOauthProvider::Application.configure do
  # Settings specified here will take precedence over those in config/environment.rb

  # The test environment is used exclusively to run your application's
  # test suite.  You never need to work with it otherwise.  Remember that
  # your test database is "scratch space" for the test suite and is wiped
  # and recreated between test runs.  Don't rely on the data there!
  config.cache_classes = true

  config.serve_static_assets = true
  config.static_cache_control = "public, max-age=3600"

  # Log error messages when you accidentally call methods on nil.
  config.whiny_nils = true

  # Show full error reports and disable caching
  config.consider_all_requests_local       = true
  config.action_controller.perform_caching = false

  # Raise exceptions instead of rendering exception templates
  config.action_dispatch.show_exceptions = false

  # Disable request forgery protection in test environment
  config.action_controller.allow_forgery_protection    = false

  # Tell Action Mailer not to deliver emails to the real world.
  # The :test delivery method accumulates sent emails in the
  # ActionMailer::Base.deliveries array.
  config.action_mailer.delivery_method = :test

  # Use SQL instead of Active Record's schema dumper when creating the test database.
  # This is necessary if your schema can't be completely dumped by the schema dumper,
  # like if you have constraints or database-specific column types
  # config.active_record.schema_format = :sql

  # Print deprecation notices to the stderr
  config.active_support.deprecation = :stderr

  # The hostname to use for the confirmation link in the ActionMailer
  # confirmation email.
  Rails.application.routes.default_url_options[:host] = 'localhost:3002'

  # Your secret key for verifying the integrity of signed cookies.
  # If you change this key, all old signed cookies will become invalid!
  # Make sure the secret is at least 30 characters and all random,
  # no regular words or you'll be exposed to dictionary attacks.
  #
  config.secret_token = ''

  # The uuid prefix for generating new Arvados user uuids.  Must be exactly
  # five characters long in the range [a-z0-9].
  config.uuid_prefix = 'zzzzz'

  # Google API tokens required for OAuth2 login.
  #
  # See https://github.com/zquestz/omniauth-google-oauth2
  #
  # and https://developers.google.com/accounts/docs/OAuth2
  #
  config.google_oauth2_client_id = ''
  config.google_oauth2_client_secret = ''

  # Set this to your OpenId 2.0 realm to enable migration from Google OpenId
  # 2.0 to Google OAuth2 OpenId Connect (Google will provide OpenId 2.0 user
  # identifiers via the openid.realm parameter in the OAuth2 flow until 2017).
  config.google_openid_realm = nil

  # Enable login via Google OpenId 2.0 (note this is scheduled to be shut off 20 April 2015!)
  config.google_deprecated_openid = false

end
