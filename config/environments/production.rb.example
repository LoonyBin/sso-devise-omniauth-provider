CfiOauthProvider::Application.configure do
  # Settings specified here will take precedence over those in config/environment.rb

  # The production environment is meant for finished, "live" apps.
  # Code is not reloaded between requests
  config.cache_classes = true

  # Full error reports are disabled and caching is turned on
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  # For nginx:
  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect'

  # If you have no front-end server that supports something like X-Sendfile,
  # just comment this out and Rails will serve the files

  # See everything in the log (default is :info)
  # config.log_level = :debug

  # Use a different logger for distributed setups
  # config.logger = SyslogLogger.new

  # Use a different cache store in production
  # config.cache_store = :mem_cache_store

  # Disable Rails's static asset server
  # In production, Apache or nginx will already do this
  config.serve_static_assets = false
  config.assets.compress = true
  config.assets.compile = true
  config.assets.digest = true
  # Enable serving of images, stylesheets, and javascripts from an asset server
  # config.action_controller.asset_host = "http://assets.example.com"

  # Disable delivery errors, bad email addresses will be ignored
  # config.action_mailer.raise_delivery_errors = false

  # Enable threaded mode
  # config.threadsafe!

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation can not be found)
  config.i18n.fallbacks = true

  # Send deprecation notices to registered listeners
  config.active_support.deprecation = :notify

  # Your secret key for verifying the integrity of signed cookies.
  # If you change this key, all old signed cookies will become invalid!
  # Make sure the secret is at least 30 characters and all random,
  # no regular words or you'll be exposed to dictionary attacks.
  #
  config.secret_token = ''

  # The uuid prefix for generating new Arvados user uuids.  Must be exactly
  # five characters long in the range [a-z0-9].
  config.uuid_prefix = 'zzzzz'

  # Google API tokens required for OAuth2 login.
  #
  # See https://github.com/zquestz/omniauth-google-oauth2
  #
  # and https://developers.google.com/accounts/docs/OAuth2
  #
  config.google_oauth2_client_id = nil
  config.google_oauth2_client_secret = nil

  config.use_ldap = {
    :title => "LDAP",
    :host => 'ldap.example.com',
    :port => 636,
    :method => :ssl,
    :base => 'ou=Users, dc=example, dc=com',
    :uid => 'uid',
    :email_domain => "example.com",
    :name_proc => Proc.new {|name| name.gsub(/@example.com$/,'')},
    #:bind_dn => "set_this_if_dn_needed_to_search",
    #:password => "some_password"
  }

  # Set this to your OpenId 2.0 realm to enable migration from Google OpenId
  # 2.0 to Google OAuth2 OpenId Connect (Google will provide OpenId 2.0 user
  # identifiers via the openid.realm parameter in the OAuth2 flow until 2017).
  config.google_openid_realm = nil

  # Enable login via Google OpenId 2.0 (note this is scheduled to be shut off 20 April 2015!)
  config.google_deprecated_openid = false

end
